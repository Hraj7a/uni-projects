This hospital management system is a Java-based project that uses object-oriented programming to model a real-world hospital setup. At the core of the project is the Person class, which acts as a general template for all people in the system. It stores common attributes like name, ID, gender (using the Gender enum), and contact information (handled by the Contact class). Two main types of people inherit from this base: Doctor and Patient.

The Doctor class extends Person and includes doctor-specific fields like department, specialization, and salary. Doctors are associated with a Department, which is a separate class that represents different units in the hospital such as cardiology or surgery. The Patient class also extends Person but adds medical details like diagnosis and treatment costs. It implements a custom Payable interface, which ensures that any object representing a patient must provide a way to calculate payment—used for generating bills.

The system also includes a Bill class that handles payment-related information such as total cost and payment methods. This class interacts with patients to simulate real billing logic. The Gender enum simplifies gender input by limiting it to fixed values (MALE, FEMALE, OTHER), making the code cleaner and less error-prone.

The main functionality of the system is driven through MainApp.java, which acts as the entry point. It uses the HospitalSystem class to organize, store, and process data related to patients and doctors. The system demonstrates key Java concepts like inheritance, encapsulation, interfaces, enums, and object composition. Overall, it’s a simple but complete simulation of how a small hospital’s data might be managed in code.
